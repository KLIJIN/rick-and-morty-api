{"version":3,"sources":["state/actions.js","state/reducers/filter_reducer.js","state/reducers/episodes_reducer.js","state/context/episodes_context.js","state/context/filter_context.js","Components/SearchForm.js","Components/Stories.js","Components/Buttons.js","Pages/HompePage.js","Pages/AboutPage.js","Pages/SingleEpisodePage.js","Pages/ErrorPage.js","logo.png","Components/Navbar.js","App.js","index.js"],"names":["SET_LOADING","SET_STORIES","REMOVE_STORY","HANDLE_PAGE","HANDLE_SEARCH","GET_SINGLE_STORY_BEGIN","GET_SINGLE_STORY_SUCCESS","GET_SINGLE_STORY_ERROR","GET_SINGLE_STORY_CHARS","LOAD_STORIES","UPDATE_FILTERS","FILTER_STORIES","setStoriesAction","data","hits","nbPages","nextPage","prevPage","type","payload","filter_reducer","state","action","tempStories","all_stories","filtered_stories","filters","name","value","text","filter","story","toLowerCase","indexOf","single_story_loading","single_story_error","single_story","chars","initialState","isLoading","query","page","reducer","console","log","id","EpisodesContext","createContext","EpisodesProvider","children","useReducer","EpisodesReducer","dispatch","currentPage","fetchStories","url","a","fetch","response","json","results","info","pages","next","prev","useEffect","Provider","removeStory","removeStoryAction","handlePage","handlePageAction","useEpisodesContext","useContext","localStorage","getItem","JSON","parse","FilterContext","React","FilterProvider","setItem","stringify","fetchSingleStory","Promise","all","characters","map","item","fetchChar","updateFilters","e","target","updateFiltersAction","useFilterContext","SearchForm","className","onSubmit","preventDefault","placeholder","onChange","Stories","stories","length","air_date","episode","date","Date","day","getDate","month","getMonth","year","getFullYear","slice","to","Buttons","disabled","onClick","bind","HomePage","About","style","display","width","height","backgroundColor","margin","SingleEpisodePage","useParams","loading","idd","status","species","gender","image","origin","location","backgroundImage","Error","marginTop","Navbar","src","logo","alt","App","exact","path","AboutPage","ErrorPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af4e3ee7.chunk.js","sourcesContent":["export const SET_LOADING = 'SET_LOADING'\r\nexport const SET_STORIES = 'SET_STORIES'\r\nexport const REMOVE_STORY = 'REMOVE_STORY'\r\nexport const HANDLE_PAGE = 'HANDLE_PAGE'\r\nexport const HANDLE_SEARCH = 'HANDLE_SEARCH'\r\nexport const GET_SINGLE_STORY_BEGIN = 'GET_SINGLE_STORY_BEGIN'\r\nexport const GET_SINGLE_STORY_SUCCESS = 'GET_SINGLE_STORY_SUCCESS'\r\nexport const GET_SINGLE_STORY_ERROR = 'GET_SINGLE_STORY_ERROR'\r\nexport const GET_SINGLE_STORY_CHARS = 'GET_SINGLE_STORY_CHARS'\r\nexport const LOAD_STORIES = 'LOAD_STORIES'\r\nexport const UPDATE_FILTERS = 'UPDATE_FILTERS'\r\nexport const FILTER_STORIES = 'FILTER_STORIES'\r\n\r\n\r\nexport const setLoadingAction = () => {\r\n  return { type: SET_LOADING }\r\n}\r\n\r\nexport const setStoriesAction = (data) => {\r\n  const { hits, nbPages, nextPage, prevPage } = data;\r\n  return {\r\n    type: SET_STORIES,\r\n    payload: {\r\n      hits: hits,\r\n      nbPages: nbPages,\r\n      nextPage: nextPage,\r\n      prevPage: prevPage,\r\n    }\r\n  }\r\n}\r\n\r\nexport const removeStoryAction = (id) => {\r\n  return {\r\n    type: REMOVE_STORY,\r\n    payload: { id: id }\r\n  }\r\n}\r\n\r\nexport const handlePageAction = (value) => {\r\n  return {\r\n    type: HANDLE_PAGE,\r\n    payload: value\r\n  }\r\n}\r\n\r\n\r\nexport const handleSearchAction = (query, page) => {\r\n  return {\r\n    type: HANDLE_SEARCH,\r\n    payload: {\r\n      query: query,\r\n      page: page\r\n    }\r\n  }\r\n}\r\n\r\nexport const loadStoriesAction = (strories) => {\r\n  return {\r\n    type: LOAD_STORIES,\r\n    payload: strories\r\n  }\r\n}\r\n\r\nexport const filterStoriesAction = () => {\r\n  return { type: FILTER_STORIES }\r\n}\r\n\r\n\r\nexport const updateFiltersAction = ({ name, value }) => {\r\n  return {\r\n    type: UPDATE_FILTERS,\r\n    payload: { name, value }\r\n  }\r\n}\r\n\r\nexport const GetSingleStoryBeginAct = () => {\r\n  return (\r\n    { type: GET_SINGLE_STORY_BEGIN }\r\n  )\r\n}\r\n\r\nexport const GetSingleStorySuccessAct = (story) => {\r\n  return {\r\n    type: GET_SINGLE_STORY_SUCCESS,\r\n    payload: story\r\n  }\r\n}\r\n\r\nexport const GetSingleStoryErrorAct = () => {\r\n  return (\r\n    { type: GET_SINGLE_STORY_ERROR }\r\n  )\r\n}\r\n\r\n\r\nexport const GetSingleStoryCharsAct = (value) => {\r\n  return {\r\n    type: GET_SINGLE_STORY_CHARS,\r\n    payload: value\r\n  }\r\n}\r\n\r\n","import {\r\n  LOAD_STORIES, UPDATE_FILTERS, FILTER_STORIES,\r\n  GET_SINGLE_STORY_BEGIN, GET_SINGLE_STORY_SUCCESS, GET_SINGLE_STORY_ERROR, GET_SINGLE_STORY_CHARS\r\n} from '../actions'\r\n\r\nconst filter_reducer = (state, action) => {\r\n  let tempStories = []\r\n  switch (action.type) {\r\n    //-------------------------------------------------------------------------------------\r\n    case LOAD_STORIES:\r\n      return {\r\n        ...state,\r\n        all_stories: [...action.payload],\r\n        filtered_stories: [...action.payload],\r\n        filters: { ...state.filters }\r\n      };\r\n    //-------------------------------------------------------------------------------------\r\n    case UPDATE_FILTERS:\r\n      const { name, value } = action.payload\r\n      return { ...state, filters: { ...state.filters, [name]: value } }\r\n    //==================FILTER_STORIES=====================================================\r\n    case FILTER_STORIES:\r\n      const { all_stories } = state;\r\n      tempStories = [...all_stories];\r\n      const { text } = state.filters\r\n      // filtering\r\n      tempStories = tempStories.filter((story) => story.name.toLowerCase().indexOf(text.toLowerCase()) >= 0)\r\n      return { ...state, filtered_stories: tempStories }\r\n    //============//=====FILTER_STORIES=====//==============================================\r\n    case GET_SINGLE_STORY_BEGIN:\r\n      return { ...state, single_story_loading: true, single_story_error: false, };\r\n    case GET_SINGLE_STORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        single_story_loading: false,\r\n        single_story: action.payload,\r\n      }\r\n    case GET_SINGLE_STORY_ERROR:\r\n      return { ...state, single_story_loading: false, single_story_error: true, };\r\n    //-------------------------------------------------------------------------------------\r\n    case GET_SINGLE_STORY_CHARS:\r\n      return {\r\n        ...state,\r\n        single_story: { ...state.single_story, chars: action.payload }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\nexport default filter_reducer","import { SET_LOADING, SET_STORIES, REMOVE_STORY, HANDLE_PAGE, HANDLE_SEARCH, } from '../actions.js'\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  hits: [],\r\n  query: \"\",\r\n  page: 1,\r\n  nbPages: 0\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  console.log(\" Episodes REDUCER ->>>\", action);\r\n  switch (action.type) {\r\n    //-------------------------------------------------------------------------------------------------------------\r\n    case SET_LOADING:\r\n      return { ...state, isLoading: true }\r\n    //-------------------------------------------------------------------------------------------------------------\r\n    case SET_STORIES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        hits: action.payload.hits,\r\n        nbPages: action.payload.nbPages,\r\n        nextPage: action.payload.nextPage,\r\n        prevPage: action.payload.prevPage,\r\n      }\r\n    //-------------------------------------------------------------------------------------------------------------\r\n    case REMOVE_STORY:\r\n      return {\r\n        ...state,\r\n        hits: state.hits.filter(story => story.id !== action.payload.id)\r\n      }\r\n    //-------------------------------------------------------------------------------------------------------------\r\n    case HANDLE_SEARCH:\r\n      console.log(\"reducer\", state, action)\r\n      return {\r\n        ...state,\r\n        query: action.payload.query,\r\n        page: action.payload.page\r\n      }\r\n    //-------------------------------------------------------------------------------------------------------------\r\n    case HANDLE_PAGE:\r\n      if (action.payload === \"inc\") {\r\n        let nextPage = state.page + 1\r\n        if (nextPage > state.nbPages) {\r\n          nextPage = 1\r\n        }\r\n        return { ...state, page: nextPage }\r\n      }\r\n      else if (action.payload === \"dec\") {\r\n        let prevPage = state.page - 1\r\n        if (prevPage < 1) {\r\n          prevPage = state.nbPages\r\n        }\r\n        return { ...state, page: prevPage }\r\n      }\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default reducer\r\n","import React, { useContext, useEffect, useReducer, createContext } from 'react'\r\nimport { setLoadingAction, setStoriesAction, removeStoryAction, handlePageAction, } from '../actions.js'\r\nimport EpisodesReducer from '../reducers/episodes_reducer'\r\n\r\n\r\nconst initialState = {\r\n  isLoading: true,\r\n  hits: [],\r\n  page: 1,\r\n  nextPage: null,\r\n  prevPage: null,\r\n  nbPages: 0,\r\n}\r\n\r\nconst EpisodesContext = createContext()\r\n\r\nconst EpisodesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(EpisodesReducer, initialState);\r\n\r\n  const url = \"https://rickandmortyapi.com/api/episode?page=\";\r\n  const currentPage = state.page;\r\n\r\n  const fetchStories = async (url, currentPage) => {\r\n    dispatch(setLoadingAction())\r\n    try {\r\n      const response = await fetch(`${url}${currentPage}`);\r\n      const data = await response.json();\r\n      dispatch(setStoriesAction({\r\n        hits: data.results,\r\n        nbPages: data.info.pages,\r\n        nextPage: data.info.next,\r\n        prevPage: data.info.prev,\r\n      }))\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchStories(url, currentPage);\r\n  }, [state.page]);\r\n\r\n  const removeStory = (id) => {\r\n    dispatch(removeStoryAction(id))\r\n  }\r\n\r\n  const handlePage = (value) => {\r\n    dispatch(handlePageAction(value))\r\n  }\r\n\r\n\r\n  return (\r\n    <EpisodesContext.Provider value={{ ...state, removeStory, handlePage, }}>\r\n      {children}\r\n    </EpisodesContext.Provider>\r\n  )\r\n}\r\n\r\n// make sure use\r\nexport const useEpisodesContext = () => {\r\n  return useContext(EpisodesContext)\r\n}\r\n\r\nexport { EpisodesContext, EpisodesProvider }\r\n\r\n","import React, { useEffect, useContext, useReducer } from 'react'\r\nimport {\r\n  loadStoriesAction,\r\n  updateFiltersAction, //update Filter Provider filters: text\r\n  filterStoriesAction,\r\n  GetSingleStoryBeginAct, GetSingleStorySuccessAct, GetSingleStoryErrorAct, GetSingleStoryCharsAct\r\n} from '../actions'\r\n\r\nimport reducer from '../reducers/filter_reducer'\r\nimport { useEpisodesContext } from './episodes_context'\r\n\r\n\r\nconst getLocalStorage = () => {\r\n  let cart = localStorage.getItem(\"text\");\r\n  if (cart) {\r\n    return JSON.parse(localStorage.getItem(\"text\"))\r\n  } else {\r\n    return \"\"\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  filtered_stories: [],\r\n  all_stories: [],\r\n  filters: {\r\n    text: getLocalStorage(),\r\n  },\r\n  single_story_loading: false,\r\n  single_story_error: false,\r\n  single_story: {}\r\n}\r\n\r\n\r\nconst FilterContext = React.createContext()\r\n\r\nexport const FilterProvider = ({ children }) => {\r\n  const { hits } = useEpisodesContext();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"text\", JSON.stringify(state.filters.text));\r\n    dispatch(loadStoriesAction(hits));\r\n  }, [hits, state.filters.text])\r\n\r\n  useEffect(() => {\r\n    dispatch(filterStoriesAction());\r\n  }, [hits, state.filters])\r\n\r\n  const updateFilters = (e) => {\r\n    let name = e.target.name\r\n    let value = e.target.value\r\n    dispatch(updateFiltersAction({ name, value }));\r\n  }\r\n\r\n  const fetchSingleStory = async (url) => {\r\n    dispatch(GetSingleStoryBeginAct())\r\n    try {\r\n      const response = await fetch(`${url}`);\r\n      const data = await response.json();\r\n      dispatch(GetSingleStorySuccessAct(data))\r\n      const chars = await Promise.all(data.characters.map(item => fetchChar(item)))\r\n      dispatch(GetSingleStoryCharsAct(chars));\r\n    } catch (error) {\r\n      dispatch(GetSingleStoryErrorAct())\r\n    }\r\n  }\r\n\r\n  const fetchChar = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      return data\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FilterContext.Provider value={{ ...state, updateFilters, fetchSingleStory, fetchChar }}>\r\n      {children}\r\n    </FilterContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useFilterContext = () => {\r\n  return useContext(FilterContext);\r\n}","import React from 'react'\r\nimport { useFilterContext } from '../state/context/filter_context'\r\n\r\nconst SearchForm = () => {\r\n  const { filters: { text }, updateFilters } = useFilterContext()\r\n\r\n  return (\r\n    <form className='search-form' onSubmit={(e) => e.preventDefault()} >\r\n      <input\r\n        type='text'\r\n        name=\"text\"\r\n        className='form-input'\r\n        placeholder=\"search story\"\r\n        value={text}\r\n        onChange={updateFilters}   // update FilterProvider - filteres.text\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n\r\n\r\n","\r\nimport React from 'react'\r\nimport { useFilterContext } from '../state/context/filter_context'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Stories = () => {\r\n  const { filtered_stories: stories } = useFilterContext();\r\n\r\n  if (stories?.length < 1) {\r\n    return <div className=\"loading\"> </div>\r\n  }\r\n\r\n  return (\r\n    <section className=\"section\" >\r\n      {stories.map((item) => {\r\n        const { id, name, air_date, episode } = item;\r\n        const date = new Date(air_date);\r\n        let day = date.getDate();\r\n        day = day < 10 ? (day = `0${day}`) : day;\r\n        let month = date.getMonth() + 1;\r\n        month = month < 10 ? (month = `0${month}`) : month;\r\n        let year = date.getFullYear();\r\n        return (\r\n          <div key={id} className=\"episode\"   >\r\n            <h3> {name} </h3>\r\n            <div> Сезон: {+`${episode.slice(1, 3)}`} </div>\r\n            <div> Серия: {+`${episode.slice(4, 6)}`} </div>\r\n            <div> Премьера: {`${day}.${month}.${year}`} </div>\r\n            <Link to={`/episodes/${id}`} className=\"link\"> read more </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Stories\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useEpisodesContext } from '../state/context/episodes_context'\r\n\r\nconst Buttons = () => {\r\n  const { isLoading, page, nbPages, handlePage } = useEpisodesContext()\r\n\r\n  return (\r\n    <div className='btn-container'>\r\n      <button disabled={isLoading} onClick={() => handlePage('dec')}> Prev </button>\r\n      <p> {page} of {nbPages} </p>\r\n      <button disabled={isLoading} onClick={handlePage.bind(this, 'inc')}> Next </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Buttons\r\n","\r\n//components\r\nimport SearchForm from \"../Components/SearchForm\"\r\nimport Stories from \"../Components/Stories\"\r\nimport Buttons from \"../Components/Buttons\"\r\n\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <SearchForm />\r\n      <Buttons />\r\n      <Stories />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nconst About = () => {\r\n\r\n  let style = {\r\n    display: \"block\",\r\n    width: \"100%\",\r\n    height: \"1px\",\r\n    backgroundColor: \"#476a2e\",\r\n    margin: \"20px 1px\"\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <section className=\"section about-section\">\r\n      <h1 className=\"section\">about</h1>\r\n      <span style={style}></span>\r\n      <p className=\"section\">\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit.\r\n        Quasi, delectus. Asperiores repudiandae quod architecto ea sunt\r\n        voluptatem doloribus enim eaque, exercitationem voluptatum facilis iusto iste,\r\n        accusantium eum officiis dignissimos tempora id suscipit ab esse quibusdam fugit,\r\n        aperiam natus accusamus. Blanditiis temporibus eaque repellat sapiente, provident\r\n        error! Placeat doloribus quia beatae.\r\n      </p>\r\n      <span style={style} ></span>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About\r\n","\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFilterContext } from '../state/context/filter_context'\r\n\r\nfunction SingleEpisodePage() {\r\n  const url = 'https://rickandmortyapi.com/api/episode/'\r\n  const { id } = useParams()\r\n\r\n  const { single_story_loading: loading, single_story: story, fetchSingleStory } = useFilterContext() //достаем из контекста часть initialState\r\n  const { air_date, episode, name, chars } = story\r\n\r\n\r\n  useEffect(() => {\r\n    fetchSingleStory(`${url}${id}`)\r\n  }, [id])\r\n\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\"> </div>\r\n  }\r\n\r\n  const date = new Date(air_date);\r\n  let day = date.getDate();\r\n  day = day < 10 ? (day = `0${day}`) : day;\r\n  let month = date.getMonth() + 1;\r\n  month = month < 10 ? (month = `0${month}`) : month;\r\n  let year = date.getFullYear();\r\n\r\n  return (\r\n    <section className=\"section \">\r\n      <div className=\"single_story\">\r\n        <h3>   {name} </h3>\r\n        <div> Сезон: {+`${episode?.slice(1, 3)}`} </div>\r\n        <div> Серия: {+`${episode?.slice(4, 6)}`} </div>\r\n        <div> Премьера: {`${day}.${month}.${year}`} </div>\r\n      </div>\r\n      <div className=\"single_story\"> <h3> characters: </h3> </div>\r\n\r\n      <div className=\"container\"  >\r\n        {\r\n          chars?.map((item) => {\r\n            const { id: idd, name, status, species, gender, image, origin, location } = item;\r\n            return (\r\n              <div className=\"CharacterCard\" key={idd} >\r\n                <div className=\"CharacterCard__image\" style={{ backgroundImage: `url(${image})` }}> </div>\r\n                <div className=\"CharacterCard__description\">\r\n                  <div> Name: {name} </div>\r\n                  <div> Gender: {gender} </div>\r\n                  <div> Species: {species}</div>\r\n                  <div> Status: {status}</div>\r\n                  <div  > Origin: {origin.name}</div>\r\n                  <div> Location: {location.name}</div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default SingleEpisodePage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Error = () => {\r\n  let style = { marginTop: \"50px\" }\r\n\r\n  return (\r\n    <section className=\"error-page section\">\r\n      <div className=\"error-container\" >\r\n        <h1 > Ой такой страницы не существует </h1>\r\n        <Link to=\"/\" className=\"btn btn-primary\" style={style}  > Back to Home </Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Error\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.d4800c1d.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../logo.png'\r\n\r\nconst Navbar = () => {\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"nav-center\"  >\r\n        <Link to=\"/\" >\r\n          <img src={logo} alt=\"logo_image\" className=\"logo\" />\r\n        </Link>\r\n        <ul className=\"nav-links\">\r\n          <li> <Link to=\"/\"> Home </Link> </li>\r\n          <li> <Link to=\"/about\"> About </Link> </li>\r\n          <li> <Link to=\"/error\"> Error Page </Link> </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css'\n//pages\nimport HomePage from \"./Pages/HompePage\"\nimport AboutPage from \"./Pages/AboutPage\"\nimport SingleEpisodePage from \"./Pages/SingleEpisodePage\"\nimport ErrorPage from \"./Pages/ErrorPage\"\n// components\nimport Navbar from './Components/Navbar'\n\nconst App = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\"> <HomePage />  </Route>\n        <Route exact path=\"/episodes/:id\" children={<SingleEpisodePage />} />\n        <Route path=\"/about\"> <AboutPage /> </Route>\n        <Route path=\"*\"> <ErrorPage /> </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n\n\n\n\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { EpisodesProvider } from './state/context/episodes_context'\nimport { FilterProvider } from './state/context/filter_context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <EpisodesProvider>\n      <FilterProvider>\n        <App />\n      </FilterProvider>\n    </EpisodesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}